name: Maven Build, Dockerize, and Deploy to Minikube

on:
  workflow_dispatch:
    inputs:
      deployment_type:
        description: 'Specify the deployment type'
        required: true
        default: 'development'

  
jobs:
  build-artifacts:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Build Maven Project
      run: mvn clean package

    - name: Upload Artifact
      id: upload-artifact
      uses: actions/upload-artifact@v4
      with:
        name: spring-boot-artifact
        path: target/*.jar

  build-docker:
    needs: build-artifacts
    runs-on: ubuntu-latest
    env:
      Image_name : ${{ secrets.DOCKER_USERNAME }}/spring-boot-app
    steps:
    
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Download Artifact
      uses: actions/download-artifact@v4
      with:
        name: spring-boot-artifact

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker image
      run: |
        IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/spring-boot-app
        docker build -t $IMAGE_NAME:${{ github.sha }} .
        docker tag $IMAGE_NAME:${{ github.sha }} $IMAGE_NAME:latest
        
    - name: Push Docker image to Docker Hub
      run: |
        IMAGE_NAME=${{ env.Image_name }}
        docker push $IMAGE_NAME:${{ github.sha }}
        docker push $IMAGE_NAME:latest

  deploy-minikube:
    needs: build-docker
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.deployment_type == 'development' }}
    env:
      username : ${{ secrets.DOCKER_USERNAME }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Set up Minikube
      run: |
        curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        chmod +x minikube
        sudo mv minikube /usr/local/bin/
        minikube start --driver=docker
        minikube kubectl -- get po -A

    - name: Deploy to Minikube using YAML files
      run: |
        # Define Docker image context
        IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/spring-boot-app:latest

        # Replace placeholder in deployment.yaml with the Docker image
        sed -i "s|<DOCKER_IMAGE>|$IMAGE_NAME|g" deployment.yaml

        # Apply deployment and service configurations
        kubectl apply -f deployment.yaml
        kubectl apply -f service.yaml

        # Wait for the deployment to stabilize
        echo "Waiting for deployment to stabilize..."
        kubectl rollout status deployment/spring-boot-app

    - name: Verify Deployment
      run: |
        echo "Verifying Kubernetes resources..."
        kubectl get all

    - name: Validate Deployment
      if: startsWith(needs.build-docker.outputs.IMAGE_NAME, 'dockernsh058') && endsWith(needs.build-docker.outputs.IMAGE_NAME, ':latest')
      run: |
        echo "Docker image name validation passed: ${{ needs.build-docker.outputs.IMAGE_NAME }}"

    - name: Status Check
      if: ${{ job.status == 'success' }}
      run: echo "Deployment completed successfully!"
